- memarg handling
v128.load	0x00	m:memarg
i16x8.load8x8_s	0x01	m:memarg
i16x8.load8x8_u	0x02	m:memarg
i32x4.load16x4_s	0x03	m:memarg
i32x4.load16x4_u	0x04	m:memarg
i64x2.load32x2_s	0x05	m:memarg
i64x2.load32x2_u	0x06	m:memarg
v128.const	0x0c	i:ImmByte[16]
v8x16.shuffle	0x0d	s:ImmLaneIdx32[16]
v8x16.swizzle	0x0e	-
v128.bitselect	0x52	-
i8x16.any_true	0x62	-
i8x16.all_true	0x63	-
i8x16.bitmask	0x64	-
i8x16.narrow_i16x8_s	0x65	-
i8x16.narrow_i16x8_u	0x66	-
i8x16.avgr_u	0x7b	-
i16x8.any_true	0x82	-
i16x8.all_true	0x83	-
i16x8.bitmask	0x84	-
i16x8.narrow_i32x4_s	0x85	-
i16x8.narrow_i32x4_u	0x86	-
i16x8.widen_low_i8x16_s	0x87	-
i16x8.widen_high_i8x16_s	0x88	-
i16x8.widen_low_i8x16_u	0x89	-
i16x8.widen_high_i8x16_u	0x8a	-
i16x8.avgr_u	0x9b	
i32x4.any_true	0xa2	-
i32x4.all_true	0xa3	-
i32x4.bitmask	0xa4	-
i32x4.widen_low_i16x8_s	0xa7	-
i32x4.widen_high_i16x8_s	0xa8	-
i32x4.widen_low_i16x8_u	0xa9	-
i32x4.widen_high_i16x8_u	0xaa	-

i32x4.trunc_sat_f32x4_s	0xf8	-
i32x4.trunc_sat_f32x4_u	0xf9	-
f32x4.splat	0x13	-
f64x2.splat	0x14	-
f32x4.extract_lane	0x1f	i:ImmLaneIdx4
f32x4.replace_lane	0x20	i:ImmLaneIdx4
f64x2.extract_lane	0x21	i:ImmLaneIdx2
f64x2.replace_lane	0x22	i:ImmLaneIdx2
f32x4.eq	0x41	-
f32x4.ne	0x42	-
f32x4.lt	0x43	-
f32x4.gt	0x44	-
f32x4.le	0x45	-
f32x4.ge	0x46	-
f64x2.eq	0x47	-
f64x2.ne	0x48	-
f64x2.lt	0x49	-
f64x2.gt	0x4a	-
f64x2.le	0x4b	-
f64x2.ge	0x4c	-
f32x4.abs	0xe0	-
f32x4.neg	0xe1	-
f32x4.sqrt	0xe3	-
f32x4.add	0xe4	-
f32x4.sub	0xe5	-
f32x4.mul	0xe6	-
f32x4.div	0xe7	-
f32x4.min	0xe8	-
f32x4.max	0xe9	-
f64x2.abs	0xec	-
f64x2.neg	0xed	-
f64x2.sqrt	0xef	-
f64x2.add	0xf0	-
f64x2.sub	0xf1	-
f64x2.mul	0xf2	-
f64x2.div	0xf3	-
f64x2.min	0xf4	-
f64x2.max	0xf5	-
f32x4.convert_i32x4_s	0xfa	-
f32x4.convert_i32x4_u	0xfb	-